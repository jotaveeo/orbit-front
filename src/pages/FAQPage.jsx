import { useState } from 'react'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Badge } from '@/components/ui/badge'
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible'
import { 
  HelpCircle, 
  ChevronDown, 
  Search, 
  FileText, 
  Code, 
  RefreshCw, 
  Mail,
  Database,
  Settings,
  Clock,
  AlertTriangle,
  CheckCircle,
  ExternalLink
} from 'lucide-react'

const FAQPage = () => {
  const [searchTerm, setSearchTerm] = useState('')
  const [openItems, setOpenItems] = useState({})

  const toggleItem = (id) => {
    setOpenItems(prev => ({
      ...prev,
      [id]: !prev[id]
    }))
  }

  const faqData = [
    {
      id: 'rc',
      category: 'Conceitos B√°sicos',
      icon: <FileText className="h-5 w-5" />,
      question: 'O que √© uma RC?',
      answer: `RC significa "Requisi√ß√£o de Compra". √â um documento formal usado para solicitar a aquisi√ß√£o de produtos ou servi√ßos dentro da organiza√ß√£o.

**Caracter√≠sticas principais:**
‚Ä¢ **Identifica√ß√£o √∫nica**: Cada RC possui um c√≥digo √∫nico (ex: RC-1001)
‚Ä¢ **Workflow de aprova√ß√£o**: Passa por diferentes status (Solicitado ‚Üí Em An√°lise ‚Üí Aprovado ‚Üí Recebido)
‚Ä¢ **Controle financeiro**: Inclui valor estimado e centro de custo
‚Ä¢ **Rastreabilidade**: Hist√≥rico completo de a√ß√µes e respons√°veis

**Tipos de RC:**
‚Ä¢ **Padr√£o**: Compras regulares de produtos/servi√ßos
‚Ä¢ **Contrato**: Renova√ß√µes ou aditivos contratuais
‚Ä¢ **Interna**: Transfer√™ncias entre unidades
‚Ä¢ **Delegada**: Compras com aprova√ß√£o delegada

A RC √© o ponto central do processo de compras, permitindo controle, auditoria e gest√£o eficiente dos recursos.`
    },
    {
      id: 'miro',
      category: 'Sistemas Integrados',
      icon: <Code className="h-5 w-5" />,
      question: 'O que √© c√≥digo Miro?',
      answer: `O c√≥digo Miro √© um identificador √∫nico usado no sistema de gest√£o de projetos e colabora√ß√£o visual da empresa.

**Funcionalidades:**
‚Ä¢ **Identifica√ß√£o de projetos**: Cada projeto possui um c√≥digo Miro √∫nico
‚Ä¢ **Integra√ß√£o com RC**: RCs podem ser vinculadas a projetos espec√≠ficos
‚Ä¢ **Rastreamento visual**: Permite acompanhar o progresso em boards visuais
‚Ä¢ **Colabora√ß√£o**: Facilita o trabalho em equipe em projetos complexos

**Formato t√≠pico:**
‚Ä¢ Exemplo: MIRO_ABC123, PROJ_2025_001
‚Ä¢ Geralmente alfanum√©rico com prefixos identificadores

**Integra√ß√£o com Orbit:**
O sistema Orbit reconhece automaticamente c√≥digos Miro em emails e documentos, criando v√≠nculos autom√°ticos entre RCs e projetos para melhor rastreabilidade.`
    },
    {
      id: 'atualizacao',
      category: 'Sistema',
      icon: <RefreshCw className="h-5 w-5" />,
      question: 'De quanto em quanto tempo os dados s√£o atualizados?',
      answer: `O sistema Orbit possui diferentes frequ√™ncias de atualiza√ß√£o dependendo do tipo de dados:

**Atualiza√ß√µes em Tempo Real:**
‚Ä¢ **Status de RCs**: Imediatamente ap√≥s mudan√ßas
‚Ä¢ **Coment√°rios e anexos**: Instant√¢neo
‚Ä¢ **Notifica√ß√µes**: Em tempo real via WebSocket

**Atualiza√ß√µes Peri√≥dicas:**
‚Ä¢ **Dashboard principal**: A cada 30 segundos
‚Ä¢ **M√©tricas de SLA/SLO**: A cada 5 minutos
‚Ä¢ **Dados de gamifica√ß√£o**: A cada 10 minutos
‚Ä¢ **Ranking de unidades**: A cada 15 minutos

**Atualiza√ß√µes Programadas:**
‚Ä¢ **Integra√ß√£o SAP**: 4x por dia (6h, 12h, 18h, 24h)
‚Ä¢ **Sincroniza√ß√£o COUPA**: 2x por dia (8h, 20h)
‚Ä¢ **Backup de dados**: Diariamente √†s 2h
‚Ä¢ **Relat√≥rios consolidados**: Semanalmente

**Modo Dados Crescentes:**
Quando ativado, simula atualiza√ß√µes mais frequentes para demonstra√ß√£o, com novos dados a cada 10 segundos.

Voc√™ pode for√ßar uma atualiza√ß√£o manual clicando no bot√£o "Atualizar" em qualquer tela.`
    },
    {
      id: 'integracao',
      category: 'Integra√ß√µes',
      icon: <Database className="h-5 w-5" />,
      question: 'Como que o SAP, RC, COUPA e Miro se conversam e interagem com e-mails?',
      answer: `O Orbit atua como um hub central que integra todos esses sistemas atrav√©s de APIs e processamento inteligente de e-mails:

**Fluxo de Integra√ß√£o:**

**1. SAP (Sistema ERP)**
‚Ä¢ **Entrada**: Dados financeiros, centros de custo, aprova√ß√µes
‚Ä¢ **Sa√≠da**: Status de RCs aprovadas, dados para faturamento
‚Ä¢ **Frequ√™ncia**: Sincroniza√ß√£o 4x por dia
‚Ä¢ **Formato**: XML/JSON via API REST

**2. COUPA (Procurement)**
‚Ä¢ **Entrada**: Cat√°logos de fornecedores, cota√ß√µes, contratos
‚Ä¢ **Sa√≠da**: RCs para processo de compra
‚Ä¢ **Frequ√™ncia**: Sincroniza√ß√£o 2x por dia
‚Ä¢ **Formato**: JSON via API REST

**3. Miro (Gest√£o de Projetos)**
‚Ä¢ **Entrada**: C√≥digos de projeto, status, respons√°veis
‚Ä¢ **Sa√≠da**: RCs vinculadas a projetos
‚Ä¢ **Frequ√™ncia**: Tempo real via webhooks
‚Ä¢ **Formato**: JSON via API REST

**4. Processamento de E-mails:**
‚Ä¢ **Algoritmo de Vincula√ß√£o Autom√°tica**:
  - Analisa assunto e corpo do e-mail
  - Extrai c√≥digos RC, Miro, SAP, COUPA usando regex
  - Vincula automaticamente aos registros correspondentes
  - Notifica respons√°veis sobre atualiza√ß√µes

**Exemplo de Fluxo Completo:**
1. RC criada no Orbit (RC-1001)
2. Enviada para aprova√ß√£o no SAP
3. E-mail de aprova√ß√£o recebido: "SAP: Documento 123456 aprovado para RC-1001"
4. Sistema vincula automaticamente o documento SAP √† RC
5. Status atualizado para "Aprovado"
6. Notifica√ß√£o enviada ao solicitante
7. RC enviada para COUPA para processo de compra
8. Se vinculada a projeto Miro, atualiza status no board visual

**Benef√≠cios:**
‚Ä¢ **Rastreabilidade completa**: Hist√≥rico unificado
‚Ä¢ **Redu√ß√£o de erros**: Vincula√ß√£o autom√°tica
‚Ä¢ **Efici√™ncia**: Menos trabalho manual
‚Ä¢ **Visibilidade**: Dashboard centralizado`
    },
    {
      id: 'sla',
      category: 'Gest√£o de Prazos',
      icon: <Clock className="h-5 w-5" />,
      question: 'Como funcionam os prazos e SLA do sistema?',
      answer: `O sistema Orbit implementa um rigoroso controle de SLA (Service Level Agreement) baseado em diferentes tipos de demanda:

**Prazos por Tipo de Demanda:**

**Requisi√ß√µes de Compra (RC):**
‚Ä¢ **Gera√ß√£o da RC**: 2 dias ap√≥s recebimento do e-mail
‚Ä¢ **Aprova√ß√£o**: 2-4 dias (varia conforme valor)
  - At√© R$ 10.000: 2 dias
  - Acima R$ 10.000: 4 dias
‚Ä¢ **Lan√ßamento NF via OTRS**: 2 dias

**Notas Fiscais:**
‚Ä¢ **NF de Mercadoria**: At√© o √∫ltimo dia √∫til do m√™s
‚Ä¢ **NF de Servi√ßo**: At√© o dia 24 de cada m√™s

**Indicadores de Performance:**

**SLI (Service Level Indicators):**
‚Ä¢ Taxa de cumprimento de prazo
‚Ä¢ Tempo m√©dio de resolu√ß√£o
‚Ä¢ Percentual de demandas cr√≠ticas
‚Ä¢ Taxa de retrabalho

**SLO (Service Level Objectives):**
‚Ä¢ Meta: 95% das demandas cumpridas no prazo
‚Ä¢ M√°ximo: 10% de demandas cr√≠ticas/vencidas
‚Ä¢ Tempo m√©dio: M√°ximo 8 dias para RCs completas

**Status de Criticidade:**
‚Ä¢ **üü¢ No Prazo**: Mais de 5 dias restantes
‚Ä¢ **üü° Aten√ß√£o**: 3-5 dias restantes
‚Ä¢ **üü† Cr√≠tico**: 1-2 dias restantes
‚Ä¢ **üî¥ Vencido**: Prazo ultrapassado

O dashboard SLA/SLO fornece visibilidade completa sobre performance e permite a√ß√µes preventivas.`
    },
    {
      id: 'gamificacao',
      category: 'Gamifica√ß√£o',
      icon: <CheckCircle className="h-5 w-5" />,
      question: 'Como funciona o sistema de gamifica√ß√£o?',
      answer: `O Orbit possui um sistema de gamifica√ß√£o completo para engajar usu√°rios e reconhecer boas pr√°ticas:

**Sistema de Pontua√ß√£o:**
‚Ä¢ **RC criada**: +50 pontos
‚Ä¢ **RC aprovada rapidamente**: +100 pontos
‚Ä¢ **Documenta√ß√£o completa**: +25 pontos
‚Ä¢ **Feedback positivo**: +30 pontos
‚Ä¢ **Meta mensal atingida**: +200 pontos

**N√≠veis de Usu√°rio:**
‚Ä¢ **N√≠vel 1-2**: Iniciante (0-500 pts)
‚Ä¢ **N√≠vel 3-4**: Intermedi√°rio (500-1500 pts)
‚Ä¢ **N√≠vel 5-6**: Avan√ßado (1500-3000 pts)
‚Ä¢ **N√≠vel 7+**: Expert (3000+ pts)

**Cole√ß√£o de Cartas:**
‚Ä¢ **Cartas Comuns**: Conquistas b√°sicas
‚Ä¢ **Cartas Raras**: Marcos importantes
‚Ä¢ **Cartas √âpicas**: Conquistas excepcionais
‚Ä¢ **Cartas Lend√°rias**: Recordes e feitos √∫nicos

**Ranking por Unidades:**
‚Ä¢ Competi√ß√£o saud√°vel entre unidades
‚Ä¢ M√©tricas: efici√™ncia, qualidade, cumprimento de prazos
‚Ä¢ Reconhecimento mensal das melhores unidades

**Benef√≠cios:**
‚Ä¢ Maior engajamento dos usu√°rios
‚Ä¢ Melhoria na qualidade dos processos
‚Ä¢ Reconhecimento de boas pr√°ticas
‚Ä¢ Competi√ß√£o saud√°vel entre equipes`
    },
    {
      id: 'cards',
      category: 'Interface',
      icon: <Settings className="h-5 w-5" />,
      question: 'Como abrir e visualizar detalhes dos cards?',
      answer: `Os cards no Orbit s√£o interativos e fornecem acesso completo √†s informa√ß√µes das RCs:

**Como Abrir um Card:**
‚Ä¢ **Clique simples**: Em qualquer lugar do card no quadro Kanban
‚Ä¢ **Atalho de teclado**: Selecione o card e pressione Enter
‚Ä¢ **Menu contextual**: Clique direito ‚Üí "Ver Detalhes"

**Informa√ß√µes Dispon√≠veis:**

**Aba Detalhes:**
‚Ä¢ Informa√ß√µes b√°sicas (criador, data, valor)
‚Ä¢ Informa√ß√µes financeiras (centro de custo, conta cont√°bil)
‚Ä¢ Descri√ß√£o completa e justificativa
‚Ä¢ Status atual e respons√°vel

**Aba Anexos:**
‚Ä¢ Lista de documentos anexados
‚Ä¢ Visualiza√ß√£o inline de PDFs e imagens
‚Ä¢ Download de arquivos
‚Ä¢ Upload de novos anexos

**Aba Coment√°rios:**
‚Ä¢ Hist√≥rico de comunica√ß√£o
‚Ä¢ Adicionar novos coment√°rios
‚Ä¢ Men√ß√µes a outros usu√°rios
‚Ä¢ Notifica√ß√µes autom√°ticas

**Aba Hist√≥rico:**
‚Ä¢ Timeline completa de a√ß√µes
‚Ä¢ Mudan√ßas de status
‚Ä¢ Usu√°rios respons√°veis por cada a√ß√£o
‚Ä¢ Timestamps precisos

**Funcionalidades Interativas:**
‚Ä¢ **Edi√ß√£o inline**: Campos edit√°veis diretamente no modal
‚Ä¢ **Drag & Drop**: Arrastar arquivos para anexar
‚Ä¢ **Notifica√ß√µes**: Atualiza√ß√µes em tempo real
‚Ä¢ **Compartilhamento**: Link direto para o card

**Atalhos √öteis:**
‚Ä¢ **Esc**: Fechar modal
‚Ä¢ **Tab**: Navegar entre abas
‚Ä¢ **Ctrl+E**: Modo edi√ß√£o
‚Ä¢ **Ctrl+S**: Salvar altera√ß√µes`
    },
    {
      id: 'api-indisponivel',
      category: 'Problemas T√©cnicos',
      icon: <AlertTriangle className="h-5 w-5" />,
      question: 'O que fazer quando a API est√° indispon√≠vel?',
      answer: `Quando a API do Manus est√° temporariamente indispon√≠vel, o sistema exibe uma tela de erro com op√ß√µes de resolu√ß√£o:

**Por que isso acontece?**
‚Ä¢ O Manus usa suspens√£o autom√°tica para economizar recursos
‚Ä¢ Ap√≥s per√≠odo de inatividade, a API "dorme"
‚Ä¢ Isso √© normal e esperado na plataforma

**Como Resolver:**

**1. Ativa√ß√£o Autom√°tica:**
‚Ä¢ Clique no bot√£o "Ativar API"
‚Ä¢ Aguarde 10-30 segundos para reativa√ß√£o
‚Ä¢ O sistema tentar√° reconectar automaticamente

**2. Verifica√ß√£o Manual:**
‚Ä¢ Use "Verificar Novamente" para testar conectividade
‚Ä¢ Verifique sua conex√£o com internet
‚Ä¢ Confirme se n√£o h√° bloqueios de firewall

**3. Recarregamento:**
‚Ä¢ Como √∫ltimo recurso, recarregue a p√°gina
‚Ä¢ Isso for√ßa uma nova tentativa de conex√£o

**Indicadores de Status:**
‚Ä¢ **üü¢ API Online**: Funcionando normalmente
‚Ä¢ **üü° Verificando**: Testando conectividade
‚Ä¢ **üî¥ API Indispon√≠vel**: Necessita ativa√ß√£o
‚Ä¢ **‚ö´ Sem Internet**: Problema de conectividade local

**Preven√ß√£o:**
‚Ä¢ Mantenha a aplica√ß√£o ativa durante o uso
‚Ä¢ Use o modo "Dados Crescentes" para manter atividade
‚Ä¢ Salve trabalhos importantes regularmente

**Suporte:**
Se o problema persistir ap√≥s v√°rias tentativas, entre em contato com o suporte t√©cnico atrav√©s da documenta√ß√£o do Manus.`
    }
  ]

  const filteredFAQ = faqData.filter(item =>
    item.question.toLowerCase().includes(searchTerm.toLowerCase()) ||
    item.answer.toLowerCase().includes(searchTerm.toLowerCase()) ||
    item.category.toLowerCase().includes(searchTerm.toLowerCase())
  )

  const categories = [...new Set(faqData.map(item => item.category))]

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="text-center space-y-4">
        <div className="flex justify-center">
          <div className="bg-gradient-to-r from-blue-600 to-purple-600 p-4 rounded-xl">
            <HelpCircle className="h-8 w-8 text-white" />
          </div>
        </div>
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Perguntas Frequentes</h1>
          <p className="text-gray-600 mt-2">
            Encontre respostas para as d√∫vidas mais comuns sobre o sistema Orbit
          </p>
        </div>
      </div>

      {/* Search */}
      <Card>
        <CardContent className="p-6">
          <div className="relative">
            <Search className="absolute left-3 top-3 h-4 w-4 text-gray-400" />
            <Input
              placeholder="Pesquisar nas perguntas frequentes..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="pl-10"
            />
          </div>
        </CardContent>
      </Card>

      {/* Categories */}
      <div className="flex flex-wrap gap-2">
        {categories.map((category) => (
          <Badge key={category} variant="outline" className="cursor-pointer hover:bg-blue-50">
            {category}
          </Badge>
        ))}
      </div>

      {/* FAQ Items */}
      <div className="space-y-4">
        {filteredFAQ.length === 0 ? (
          <Card>
            <CardContent className="p-8 text-center">
              <Search className="h-12 w-12 text-gray-400 mx-auto mb-4" />
              <h3 className="text-lg font-medium text-gray-900 mb-2">
                Nenhum resultado encontrado
              </h3>
              <p className="text-gray-600">
                Tente usar termos diferentes ou navegue pelas categorias dispon√≠veis.
              </p>
            </CardContent>
          </Card>
        ) : (
          filteredFAQ.map((item) => (
            <Card key={item.id} className="hover:shadow-md transition-shadow">
              <Collapsible
                open={openItems[item.id]}
                onOpenChange={() => toggleItem(item.id)}
              >
                <CollapsibleTrigger asChild>
                  <CardHeader className="cursor-pointer hover:bg-gray-50 transition-colors">
                    <div className="flex items-center justify-between">
                      <div className="flex items-center space-x-3">
                        <div className="p-2 bg-blue-100 rounded-lg">
                          {item.icon}
                        </div>
                        <div className="text-left">
                          <CardTitle className="text-lg">{item.question}</CardTitle>
                          <CardDescription>
                            <Badge variant="secondary" className="mt-1">
                              {item.category}
                            </Badge>
                          </CardDescription>
                        </div>
                      </div>
                      <ChevronDown 
                        className={`h-5 w-5 text-gray-500 transition-transform ${
                          openItems[item.id] ? 'rotate-180' : ''
                        }`} 
                      />
                    </div>
                  </CardHeader>
                </CollapsibleTrigger>
                
                <CollapsibleContent>
                  <CardContent className="pt-0">
                    <div className="prose prose-sm max-w-none">
                      <div className="whitespace-pre-line text-gray-700 leading-relaxed">
                        {item.answer}
                      </div>
                    </div>
                  </CardContent>
                </CollapsibleContent>
              </Collapsible>
            </Card>
          ))
        )}
      </div>

      {/* Help Section */}
      <Card className="bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2 text-blue-800">
            <Mail className="h-5 w-5" />
            <span>Precisa de mais ajuda?</span>
          </CardTitle>
          <CardDescription>
            N√£o encontrou a resposta que procurava? Entre em contato conosco.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="flex flex-col sm:flex-row gap-4">
            <Button variant="outline" className="flex items-center space-x-2">
              <Mail className="h-4 w-4" />
              <span>Enviar E-mail</span>
            </Button>
            <Button variant="outline" asChild>
              <a 
                href="https://docs.manus.space" 
                target="_blank" 
                rel="noopener noreferrer"
                className="flex items-center space-x-2"
              >
                <ExternalLink className="h-4 w-4" />
                <span>Documenta√ß√£o Completa</span>
              </a>
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

export default FAQPage

